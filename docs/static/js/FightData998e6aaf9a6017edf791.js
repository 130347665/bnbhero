(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{415:function(t,e,n){"use strict";e.a=[{name:"Tier 1-1",success:70,hploss:200,exp:100,reward:.0033},{name:"Tier 1-2",success:67,hploss:200,exp:110,reward:.00396},{name:"Tier 1-3",success:63,hploss:200,exp:120,reward:.0462},{name:"Tier 2-1",success:59,hploss:200,exp:130,reward:.00528},{name:"Tier 2-2",success:55,hploss:200,exp:150,reward:.00594},{name:"Tier 2-3",success:51,hploss:200,exp:200,reward:.0066},{name:"Boss 1",success:28,hploss:400,exp:400,reward:.0242}]},424:function(t,e,n){},450:function(t,e,n){"use strict";n(424)},452:function(t,e,n){"use strict";n.r(e);var r=n(431),a=n.n(r),s=n(415),i=n(449),o=n.n(i);var c={name:"FightData",data:function(){return{api:"https://graphql.bitquery.io",walletAddress:"",dataAddress:"0xde9fFb228C1789FEf3F08014498F2b16c57db855",filterHero:"",filterEnemyType:"",network:"bsc",eventType:"Fight",columns:[{title:"英雄",key:"_attackingHero"},{title:"敵人",key:"enemyType"},{title:"獎勵",key:"rewards"},{title:"經驗值",key:"xpGained"},{title:"損血",key:"hpLoss"},{title:"時間",key:"date"}],data:[]}},beforeMount:function(){this.handleCalc()},methods:{handleCalc:function(){var t,e=this;return(t=regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.fetchGetCount();case 2:n=t.sent,e.fetchGetFightData(n);case 4:case"end":return t.stop()}}),t,e)})),function(){var e=t.apply(this,arguments);return new Promise((function(t,n){return function r(a,s){try{var i=e[a](s),o=i.value}catch(t){return void n(t)}if(!i.done)return Promise.resolve(o).then((function(t){r("next",t)}),(function(t){r("throw",t)}));t(o)}("next")}))})()},fetchGetCount:function(){return a.a.post(this.api,{query:"query ($network: EthereumNetwork!, $address: String!, $eventType: String!, $limit: Int!, $offset: Int!, $from: ISO8601DateTime, $to: ISO8601DateTime, $txFrom: [String!]) {\n  ethereum(network: $network) {\n    smartContractEvents(\n      options: {limit: $limit, offset: $offset}\n      date: {since: $from, till: $to}\n      txFrom: {in: $txFrom}\n      smartContractAddress: {is: $address}\n      smartContractEvent: {is: $eventType}\n    ) {\n      count(smartContractEvent: {is: $eventType})\n      __typename\n    }\n    __typename\n  }\n}",variables:{network:this.network,address:this.dataAddress,eventType:this.eventType,offset:0,limit:1e4,from:null,to:null,txFrom:[this.walletAddress]}}).then((function(t){return t.data.data.ethereum.smartContractEvents[0].count})).catch((function(t){return console.error(t,"查詢戰鬥數據失敗"),-1}))},fetchGetFightData:function(t){return a.a.post(this.api,{query:'query ($network: EthereumNetwork!, $address: String!, $eventType: String!, $limit: Int!, $offset: Int!, $from: ISO8601DateTime, $to: ISO8601DateTime, $txFrom: [String!]) {\n  ethereum(network: $network) {\n    smartContractEvents(\n      options: {desc: "block.height", limit: $limit, offset: $offset}\n      date: {since: $from, till: $to}\n      txFrom: {in: $txFrom}\n      smartContractAddress: {is: $address}\n      smartContractEvent: {is: $eventType}\n    ) {\n      smartContractEvent {\n        name\n        __typename\n      }\n      block {\n        height\n        timestamp {\n          iso8601\n          unixtime\n          __typename\n        }\n        __typename\n      }\n      arguments {\n        value\n        argument\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}',variables:{network:this.network,address:this.dataAddress,eventType:this.eventType,offset:0,limit:t,from:null,to:null,txFrom:[this.walletAddress]}}).then(this.handleFightData).catch((function(t){return console.error(t,"查詢戰鬥數據失敗"),[]}))},handleFightData:function(t){var e=t.data.data.ethereum.smartContractEvents;this.data=e.map((function(t){var e=t.arguments,n=t.block,r={};return e.slice(1,7).forEach((function(t){var e=t.argument,n=t.value;return r[e]=function(t,e){switch(t){case"enemyType":return s.a[e].name;case"rewards":return e/1e18;default:return e}}(e,n)})),r.date=o.a.unix(n.timestamp.unixtime).format("YYYY/MM/DD HH:mm:ss"),r}))},rowClassName:function(t){return t.rewards?"":"table-fair"}},computed:{tableData:function(){var t=this;return this.filterHero||this.filterEnemyType?this.data.filter((function(e){var n=e._attackingHero,r=e.enemyType;return(n.includes(t.filterHero)||!t.filterHero)&&(r.includes(t.filterEnemyType)||!t.filterEnemyType)})):this.data},fightCount:function(){return this.tableData.length},fightSuccess:function(){return this.tableData.filter((function(t){return t.rewards})).length},fightFair:function(){return this.fightCount-this.fightSuccess}}},l=(n(450),n(2)),u=Object(l.a)(c,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"container"},[n("Row",[n("Col",{attrs:{span:"6"}},[n("Input",{attrs:{placeholder:"bsc 錢包位址"},model:{value:t.walletAddress,callback:function(e){t.walletAddress=e},expression:"walletAddress"}})],1),t._v(" "),n("Col",{attrs:{span:"6"}},[n("Input",{attrs:{placeholder:"篩選英雄"},model:{value:t.filterHero,callback:function(e){t.filterHero=e},expression:"filterHero"}})],1),t._v(" "),n("Col",{attrs:{span:"6"}},[n("Input",{attrs:{placeholder:"篩選敵人"},model:{value:t.filterEnemyType,callback:function(e){t.filterEnemyType=e},expression:"filterEnemyType"}})],1),t._v(" "),n("Col",{attrs:{span:"6"}},[n("Button",{attrs:{type:"success",long:"",icon:"ios-search"},on:{click:t.handleCalc}},[t._v("\n                    計算\n                ")])],1)],1),t._v(" "),t.tableData.length?n("Row",[t._v("\n        總戰鬥總數: "+t._s(t.fightCount)+"\n        戰鬥成功: "+t._s(t.fightSuccess)+"\n        戰鬥失敗: "+t._s(t.fightFair)+"\n        實際勝率: "+t._s((t.fightSuccess/t.fightCount*100).toFixed(2))+"%\n    ")]):t._e(),t._v(" "),n("Table",{attrs:{"row-class-name":t.rowClassName,columns:t.columns,data:t.tableData}})],1)}),[],!1,null,"15827440",null);e.default=u.exports}}]);
//# sourceMappingURL=FightData998e6aaf9a6017edf791.js.map